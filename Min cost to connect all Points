class Solution:
    def minCostConnectPoints(self, points: List[List[int]]) -> int:
        N = len(points)
        adj=[[] for i in range(N)]
        for i in range(N):
            x1,y1=points[i]
            for j in range(i+1,N):
                x2,y2=points[j]
                dist=abs(x1-x2)+abs(y1-y2)
                adj[i].append([dist,j])
                adj[j].append([dist,i])
            
        #prims algorithms
        res = 0
        visit = set()
        minHeap=[[0,0]] #[costs,points]
        while(len(visit) < N):
            costs,i=heapq.heappop(minHeap)
            if i in visit:
                continue
            res+=costs
            visit.add(i)
            for neigCost,nei in adj[i]:
                if nei not in visit:
                    heapq.heappush(minHeap,[neigCost,nei])
        return res
