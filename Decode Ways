class Solution:
    def numDecodings(self, s: str) -> int:
        dp=[0 for i in range(len(s)+1)]
        if(s[0] == "0"): return 0
        dp[0]=1
        dp[1]=1
        n = len(s)
        for i in range(2,n+1):
            if(s[i-1] >='1' and s[i-1] <= '9'):
                dp[i] = dp[i-1]
            if(s[i-2] == "1"):
                dp[i]+=dp[i-2]
            if(s[i-2] == '2' and (s[i-1] >= "0" and s[i-1] <= "6")):
               dp[i] += dp[i-2]
        return dp[n]
               
               
                
        
        # return self.solve(0,s,dp)
        
#     def solve(self,i,s,dp):
#         if(i >= len(s)): return 1
#         if(s[i] == "0"): return 0
#         if(i == len(s)-1): return 1
#         if(dp[i] != -1): return dp[i]
#         elif(s[i] == "1" or s[i] == "2" and (s[i+1] >= chr(48) and s[i+1] <= chr(54))):
#             dp[i] = self.solve(i+1,s,dp) + self.solve(i+2,s,dp)
#             return dp[i]
#         else:
#             dp[i] = self.solve(i+1,s,dp)
#             return dp[i]
        
