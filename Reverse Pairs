class Solution:
    def merge(self,arr,low,mid,high):
        total = 0
        j=mid+1
        for i in range(low,mid+1):
            while(j <= high and arr[i] > 2 * arr[j]):
                j+=1
            total += (j-(mid+1))

        left = low
        right = mid + 1
        temp = []
        while(left <= mid and right <= high):
            if (arr[left] <= arr[right]):
                temp.append(arr[left])
                left+=1

            else:
                temp.append(arr[right])
                right +=1 

        while(left <= mid):
            temp.append(arr[left])
            left+=1

        while(right <= high):
            temp.append(arr[right])
            right+=1

        for i in range(low,high+1):
            arr[i]=temp[i-low]


        return total
    
    def mergesort(self,arr,low,high):
        if (low >= high):
            return 0

        mid = (high + low)//2
        inv = self.mergesort(arr,low,mid)
        inv += self.mergesort(arr,mid+1,high)
        inv += self.merge(arr,low,mid,high)

        return inv
